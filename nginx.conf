#
# Default NGINX configuration file for wacz-exhibitor.
# 
# Inspiration:
# - https://www.nginx.com/blog/smart-efficient-byte-range-caching-nginx/
# - https://kevincox.ca/2021/06/04/http-range-caching/
# - https://github.com/KyleAMathews/docker-nginx/blob/master/nginx.conf
#
proxy_cache_path /var/cache/nginx keys_zone=rangecache:10m inactive=60m;

server { 
  listen 8080;
  listen [::]:8080;

  root /usr/share/nginx/html/;

  # Range request caching setup (slice-by-slice approach)
  slice              1m;
  proxy_cache_key    $host$uri$is_args$args$slice_range;
  proxy_set_header   Range $slice_range;
  proxy_http_version 1.1;
  proxy_cache_valid  200 206 1h;
  proxy_cache rangecache;

  # Gzip compression setup
  gzip on;
  gzip_http_version 1.0; # Minimum HTTP version for gzip compression
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/javascript
    application/json
    text/css
    text/plain;
  # text/html is always compressed by HttpGzipModule
  
  # Serves contents of "/embed" as "/"
  location / {
    try_files /embed$uri /embed/$uri/ /index.html;

    # Intented CSP Policy: 
    # "Everything's allowed within the <iframe>, as long as it's same-origin."
    add_header Content-Security-Policy "default-src 'self' data: 'unsafe-inline' 'unsafe-hashes' 'unsafe-eval';";
  }

  # Exception to the above rule: "/replay-web-page" folder.
  location /replay-web-page/ {
    try_files $uri $uri/;
  }

  #
  # Access to "warc", "warc.gz", "wacz" files:
  # - Serve local file from "/archives/" if available.
  # - Otherwise, try to proxy it from a remote server.
  #
  location ~ \.warc {
    types { } default_type "application/warc";
    try_files /archives/$uri /archives/$uri/ @remote_warc_archive;
    # EDIT: Delete "@remote_warc_archive" from the above list if you do not wish to proxy a remote server.
  }

  location ~ \.warc.gz {
    gzip_static on;
    types { } default_type "application/x-gzip";
    try_files /archives/$uri /archives/$uri/ @remote_warc_gz_archive;
    # EDIT: Delete "@remote_warc_gz_archive" from the above list if you do not wish to proxy a remote server.
  }

  location ~ \.wacz {
    types { } default_type "application/wacz";
    try_files /archives/$uri /archives/$uri/ @remote_wacz_archive;
    # EDIT: Delete "@remote_wacz_archive" from the above list if you do not wish to proxy a remote server.
  }

  # EDIT: Delete this block if you do not wish to proxy a remote server.
  location @remote_warc_archive {
    proxy_pass https://example.com; # NOTE: Replace with address of remote server.
    proxy_hide_header Content-Type;
    add_header Content-Type "application/warc";
  }

  # EDIT: Delete this block if you do not wish to proxy a remote server.
  location @remote_warc_gz_archive {
    proxy_pass https://example.com; # NOTE: Replace with address of remote server.
    proxy_hide_header Content-Type;
    add_header Content-Type "application/x-gzip";
  }

  # EDIT: Delete this block if you do not wish to proxy a remote server.
  location @remote_wacz_archive {
    proxy_pass https://example.com; # NOTE: Replace with address of remote server.
    proxy_hide_header Content-Type;
    add_header Content-Type "application/wacz";
  }

}
